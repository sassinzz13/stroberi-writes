{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sassinzz13/programming-portfolio/stroberi-writes/client/src/context/AuthContext.jsx"],"sourcesContent":["// context/AuthContext.jsx\n\"use client\";\nimport React, { createContext, useState, useEffect } from \"react\";\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null); // optional if you want user info\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"accessToken\");\n    setIsLoggedIn(!!token);\n  }, []);\n\n  const login = (token, refreshToken, userData = null) => {\n    localStorage.setItem(\"accessToken\", token);\n    localStorage.setItem(\"refreshToken\", refreshToken);\n    setIsLoggedIn(true);\n    setUser(userData);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    setIsLoggedIn(false);\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn, user, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;AAE1B;;;AADA;;AAGO,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD;AAEhC,MAAM,eAAe;QAAC,EAAE,QAAQ,EAAE;;IACvC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,iCAAiC;IAEzE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,cAAc,CAAC,CAAC;QAClB;iCAAG,EAAE;IAEL,MAAM,QAAQ,SAAC,OAAO;YAAc,4EAAW;QAC7C,aAAa,OAAO,CAAC,eAAe;QACpC,aAAa,OAAO,CAAC,gBAAgB;QACrC,cAAc;QACd,QAAQ;IACV;IAEA,MAAM,SAAS;QACb,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,cAAc;QACd,QAAQ;IACV;IAEA,qBACE,6LAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAY;YAAM;YAAO;QAAO;kBAC5D;;;;;;AAGP;GA5Ba;KAAA","debugId":null}}]
}